import { format } from ".."

describe("format", () => {
  test("format JS", async () => {
    const formatted = await format("const a\n= 1", { lang: "js" })
    expect(formatted).toBe("const a = 1\n")
  })

  test("format TS", async () => {
    const formatted = await format("const a:\nnumber\n= 1;", { lang: "ts" })
    expect(formatted).toBe("const a: number = 1\n")
  })

  // test("format Ruby", async () => {
  //   const formatted = await format("a\n=\n1", {
  //     lang: "ruby",
  //   })
  //   expect(formatted).toBe("a = 1\n")
  // })

  test("format CSS", async () => {
    const formatted = await format("a\n{\ncolor\n:\nred\n}", {
      lang: "css",
    })
    expect(formatted).toBe("a {\n  color: red;\n}\n")
  })

  test("format PHP", async () => {
    const formatted = await format("<?php\n$a=1;echo $a;", {
      lang: "php",
    })
    expect(formatted).toBe("<?php\n$a = 1;\necho $a;\n")
  })

  test("format HTML", async () => {
    const formatted = await format("<p>Lorem</p>", {
      lang: "html",
    })
    expect(formatted).toBe("<p>Lorem</p>\n")
  })

  test("format XML", async () => {
    const formatted = await format(
      "<foo><arc><extended></extended></arc></foo>",
      {
        lang: "xml",
      },
    )
    expect(formatted).toBe("<foo><arc><extended /></arc></foo>\n")
  })
})
