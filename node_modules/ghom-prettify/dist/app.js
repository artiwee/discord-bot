"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.format = void 0;
var prettier = require("prettier");
// | "ruby"
// | "rb"
/**
 * Format the given code. <br>
 * If the parser is not provided, it will be inferred from the language.
 */
function format(code, options) {
    if (options === void 0) { options = {}; }
    var lang = options.lang, parser = options.parser;
    var plugins = undefined;
    if (!parser) {
        if (!lang)
            parser = "babel";
        else {
            switch (lang) {
                case "js":
                case "javascript":
                    parser = "babel";
                    break;
                case "ts":
                case "typescript":
                    parser = "babel-ts";
                    break;
                case "md":
                case "markdown":
                    parser = "markdown";
                    break;
                case "yaml":
                case "css":
                case "scss":
                case "json":
                case "json5":
                case "html":
                case "vue":
                case "angular":
                    parser = lang;
                    break;
                case "php":
                    parser = "php";
                    plugins = ["@prettier/plugin-php"];
                    break;
                case "xml":
                    parser = "xml";
                    plugins = ["@prettier/plugin-xml"];
                    break;
                // case "ruby":
                // case "rb":
                //   parser = "ruby"
                //   plugins = ["@prettier/plugin-ruby"]
                //   break
            }
        }
    }
    return prettier.format(code, __assign(__assign({ trailingComma: "es5", tabWidth: 2, semi: false, singleQuote: false, useTabs: false }, options), { parser: parser, plugins: plugins }));
}
exports.format = format;
